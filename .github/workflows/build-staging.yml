name: Build DEV
on:
  push:
    branches: [ staging ]
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APPNAME }}.staging

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Install SSH Client
        run: |
          sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.BLOCKIFY_STAGING_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.BLOCKIFY_STAGING_IP }} >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            ${{ secrets.BLOCKIFY_STAGING_SSH_USERNAME }}@${{ secrets.BLOCKIFY_STAGING_IP }} \
            "cd home/www/botanika && \
            docker rm -f botanika_service && \
            docker rmi -f ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APPNAME }}.staging && \
            docker-compose up -d"